"""
FILE:   button_led_map.py
DESCRIPTION: Simple dict with elements of arrays
that correspond to the panel, micro and logical pin
numbers.

WRITTEN BY: Jake Poirier

MODIFICATION HISTORY:

date           programmer         modification
-----------------------------------------------
2/1/17          JDP                original
"""

map_arrays = {
    "panel":    [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27,
                 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52,
                 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77,
                 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101,
                 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121,
                 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141,
                 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161,
                 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181,
                 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201,
                 202, 203],
    "micro":    [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1,
                 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1,
                 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1,
                 1, 1, 1, 1, 1, 1, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
                 3, 3, 3, 3, 2, 2, 2, 2, 2, 2, 2, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 3,
                 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 1, 1,
                 1, 0, 0, 0, 0],
    "logical":  [4, 10, 16, 26, 32, 44, 46, 41, 35, 29, 13, 7, 1, 0, 6, 12, 28, 34, 40, 47, 45, 33, 27, 17, 11, 5,
                 2, 8, 14, 20, 24, 30, 38, 42, 47, 43, 37, 31, 23, 19, 15, 9, 3, 2, 8, 14, 18, 22, 30, 36, 42, 46,
                 43, 39, 31, 25, 21, 15, 9, 3, 0, 6, 12, 18, 22, 28, 34, 36, 40, 48, 45, 39, 33, 27, 25, 21, 17,
                 11, 5, 4, 10, 16, 20, 24, 26, 32, 38, 44, 48, 41, 37, 35, 29, 23, 19, 13, 7, 1, 49, 50, 51, 52,
                 53, 55, 57, 59, 1, 3, 5, 7, 9, 11, 13, 15, 17, 19, 21, 23, 25, 27, 29, 58, 56, 54, 52, 50, 48, 46,
                 44, 42, 40, 38, 36, 34, 32, 30, 58, 56, 54, 53, 52, 51, 50, 49, 2, 5, 7, 13, 15, 17, 20, 1, 3, 6,
                 12, 16, 19, 21, 0, 4, 11, 18, 22, 59, 57, 55, 53, 51, 49, 47, 45, 43, 41, 39, 37, 35, 33, 31, 59,
                 57, 55, 28, 26, 24, 22, 20, 18, 16, 14, 12, 10, 8, 6, 4, 2, 0, 58, 56, 54, 9, 8, 10, 14],
    "pcb_conn": ["J2A", "J2A", "J2A", "J2B", "J2B", "J2B", "J2B", "J2B", "J2B", "J2B", "J2A", "J2A", "J2A", "J3A",
                 "J3A", "J3A", "J3A", "J3A", "J3A", "J3A", "J3A", "J3A", "J3A", "J3A", "J3A", "J3A", "J2A", "J2A",
                 "J2A", "J2A", "J2A", "J2B", "J2B", "J2B", "J2B", "J2B", "J2B", "J2B", "J2A", "J2A", "J2A", "J2A",
                 "J2A", "J3A", "J3A", "J3A", "J3A", "J3A", "J3A", "J3A", "J3A", "J3A", "J3A", "J3A", "J3A", "J3A",
                 "J3A", "J3A", "J3A", "J3A", "J2A", "J2A", "J2A", "J2A", "J2A", "J2B", "J2B", "J2B", "J2B", "J2B",
                 "J2B", "J2B", "J2B", "J2B", "J2A", "J2A", "J2A", "J2A", "J2A", "J3A", "J3A", "J3A", "J3A", "J3A",
                 "J3A", "J3A", "J3A", "J3A", "J3A", "J3A", "J3A", "J3A", "J3A", "J3A", "J3A", "J3A", "J3A", "J3A",
                 "J1A", "J1A", "J1A", "J1A", "J1A", "J1A", "J1A", "J1A", "J1A", "J1A", "J1A", "J1B", "J1B", "J1B",
                 "J1B", "J1B", "J1B", "J1B", "J1B", "J1B", "J1B", "J1B", "J1B", "J4B", "J4B", "J4B", "J4B", "J4B",
                 "J4B", "J4B", "J4B", "J4B", "J4B", "J4B", "J4B", "J4A", "J4A", "J4A", "J4A", "J4A", "J4A", "J4A",
                 "J4A", "J4A", "J4A", "J4A", "J5A", "J5A", "J5A", "J5B", "J5B", "J5B", "J5B", "J5A", "J5A", "J5A",
                 "J5B", "J5B", "J5B", "J5B", "J5A", "J5A", "J5A", "J5B", "J5B", "J4B", "J4B", "J4B", "J4B", "J4B",
                 "J4B", "J4B", "J4B", "J4B", "J4B", "J4B", "J4B", "J4A", "J4A", "J4A", "J4A", "J4A", "J4A", "J1B",
                 "J1B", "J1B", "J1B", "J1B", "J1B", "J1B", "J1B", "J1B", "J1B", "J1B", "J1B", "J1A", "J1A", "J1A",
                 "J1A", "J1A", "J1A", "J5A", "J5A", "J5A", "J5B"]
}

micro_array = {'/dev/ttyO1': {'logical': [2, 5, 7, 13, 15, 17, 20, 1, 3, 6, 12, 16, 19, 21, 0, 4, 11, 18, 22, 9, 8,
                                          10, 14],
                              'panel': [145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159,
                                        160, 161, 162, 163, 200, 201, 202, 203]},
               '/dev/ttyO2': {'logical': [4, 10, 16, 26, 32, 44, 46, 41, 35, 29, 13, 7, 1, 2, 8, 14, 20, 24, 30,
                                          38, 42, 47, 43, 37, 31, 23, 19, 15, 9, 3, 0, 6, 12, 18, 22, 28, 34, 36,
                                          40, 48, 45, 39, 33, 27, 25, 21, 17, 11, 5, 49, 50, 51, 52, 53, 55, 57,
                                          59, 58, 56, 54],
                              'panel': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 27, 28, 29, 30, 31, 32, 33,
                                        34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 61, 62, 63, 64, 65, 66, 67, 68, 69,
                                        70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 99, 100, 101, 102, 103, 104, 105,
                                        106, 197, 198, 199]},
               '/dev/ttyO4': {'logical': [0, 6, 12, 28, 34, 40, 47, 45, 33, 27, 17, 11, 5, 2, 8, 14, 18, 22, 30, 36,
                                          42, 46, 43, 39, 31, 25, 21, 15, 9, 3, 4, 10, 16, 20, 24, 26, 32, 38, 44,
                                          48, 41, 37, 35, 29, 23, 19, 13, 7, 1, 58, 56, 54, 53, 52, 51, 50, 49, 59,
                                          57, 55],
                              'panel': [14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 44, 45, 46, 47, 48, 49,
                                        50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 80, 81, 82, 83, 84, 85, 86, 87,
                                        88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 137, 138, 139, 140, 141, 142,
                                        143, 144, 179, 180, 181]},
               '/dev/ttyO5': {'logical': [1, 3, 5, 7, 9, 11, 13, 15, 17, 19, 21, 23, 25, 27, 29, 58, 56, 54, 52, 50,
                                          48, 46, 44, 42, 40, 38, 36, 34, 32, 30, 59, 57, 55, 53, 51, 49, 47, 45, 43,
                                          41, 39, 37, 35, 33, 31, 28, 26, 24, 22, 20, 18, 16, 14, 12, 10, 8, 6, 4,
                                          2, 0],
                              'panel': [107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121,
                                        122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136,
                                        164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178,
                                        182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196]},
               }


def convert_to_micro_array():
    micro_json = {'/dev/ttyO1': {'panel': [], 
                                 'logical': []}, 
                  '/dev/ttyO2': {'panel': [], 
                                 'logical': []}, 
                  '/dev/ttyO4': {'panel': [], 
                                 'logical': []}, 
                  '/dev/ttyO5': {'panel': [], 
                                 'logical': []}
                  }
    for index in range(len(map_arrays['panel'])):
        micro_json[str(map_arrays['micro'][index])]['panel'].append(map_arrays['panel'][index])
        micro_json[str(map_arrays['micro'][index])]['logical'].append(map_arrays['logical'][index])

    print micro_json


if __name__ == '__main__':
    convert_to_micro_array()
    # print map_arrays['micro'][155]
